
# Publish acceptance test coverage into coveralls when either:
# * running tests for a mender PR: MENDER_REV ~= /pull/XXX/head/
# * running nightly build: $NIGHTLY_BUILD == "true"
.template_publish_acceptance_coverage:
  tags:
    - mender-qa-worker-generic-light
  only:
    variables:
      - $MENDER_REV =~ /pull\/.*\/head/
      - $MENDER_ARTIFACT_REV =~ /pull\/.*\/head/
      - $NIGHTLY_BUILD == "true"
  stage: publish:tests
  needs:
    - init:workspace
  image: golang:1.15-alpine3.12
  before_script:
    - apk --update add git
    # Run go get out of the repo to not modify go.mod
    - cd / && go get github.com/mattn/goveralls && cd -
    # Coveralls env variables:
    #  According to https://docs.coveralls.io/supported-ci-services
    #  we should set CI_NAME, CI_BUILD_NUMBER, etc. But according
    #  to goveralls source code (https://github.com/mattn/goveralls)
    #  many of these are not supported. Set CI_BRANCH, CI_PR_NUMBER,
    #  and pass few others as command line arguments.
    #  See also https://docs.coveralls.io/api-reference
    - if [ "${MENDER_REV}" = "master" ]; then
    -   export CI_BRANCH=master
    - else
    -   export CI_PR_NUMBER=$(echo ${MENDER_REV} | sed -E 's|pull/([1-9]+)/head|\1|')
    -   export CI_BRANCH=pr_${CI_PR_NUMBER}
    - fi
  script:
    # Get mender source
    - tar xf ${CI_PROJECT_DIR}/workspace.tar.gz ./go/src/github.com/mendersoftware/mender
    - mv go/src/github.com/mendersoftware/mender ${CI_PROJECT_DIR}/mender
    - cd ${CI_PROJECT_DIR}/mender
    - goveralls
      -debug
      -repotoken ${MENDER_COVERALLS_TOKEN}
      -service gitlab-ci
      -jobid $(git rev-parse HEAD)
      -covermode set
      -flagname acceptance-${JOB_BASE_NAME}
      -parallel
      -coverprofile $(find ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-client -name 'coverage*.out' | tr '\n' ',' | sed 's/,$//')

    - if [ "${MENDER_ARTIFACT_REV}" = "master" ]; then
    -   export CI_BRANCH=master
    - else
    -   export CI_PR_NUMBER=$(echo ${MENDER_ARTIFACT_REV} | sed -E 's|pull/([1-9]+)/head|\1|')
    -   export CI_BRANCH=pr_${CI_PR_NUMBER}
    - fi

    - if [ -d ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-artifact ]; then
    # Get mender-artifact source
    -   tar xf ${CI_PROJECT_DIR}/workspace.tar.gz ./go/src/github.com/mendersoftware/mender-artifact
    -   mv go/src/github.com/mendersoftware/mender-artifact ${CI_PROJECT_DIR}/mender-artifact
    -   cd ${CI_PROJECT_DIR}/mender-artifact
    -   goveralls
        -debug
        -repotoken ${MENDER_ARTIFACT_COVERALLS_TOKEN}
        -service gitlab-ci
        -jobid $(git rev-parse HEAD)
        -covermode set
        -flagname acceptance-${JOB_BASE_NAME}
        -parallel
        -coverprofile $(find ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-artifact -name 'coverage*.out' | tr '\n' ',' | sed 's/,$//')
    - fi

publish:tests:acceptance:qemux86_64:uefi_grub:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_QEMUX86_64_UEFI_GRUB != "true"
  needs:
    - init:workspace
    - test:acceptance:qemux86_64:uefi_grub
  variables:
    JOB_BASE_NAME: qemux86_64_uefi_grub

publish:tests:acceptance:qemux86_64:uefi_grub:cross-platform:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_QEMUX86_64_UEFI_GRUB != "true"
  needs:
    - init:workspace
    - test:acceptance:qemux86_64:uefi_grub:cross-platform
  variables:
    # Modify JOB_BASE_NAME to have a different flag when reporting coverage
    JOB_BASE_NAME: qemux86_64_uefi_grub-cross-platform

publish:tests:acceptance:vexpress_qemu:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_VEXPRESS_QEMU != "true"
  needs:
    - init:workspace
    - test:acceptance:vexpress_qemu
  variables:
    JOB_BASE_NAME: vexpress_qemu

publish:tests:acceptance:qemux86_64:bios_grub:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_QEMUX86_64_BIOS_GRUB != "true"
  needs:
    - init:workspace
    - test:acceptance:qemux86_64:bios_grub
  variables:
    JOB_BASE_NAME: qemux86_64_bios_grub

publish:tests:acceptance:qemux86_64:bios_grub_gpt:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_QEMUX86_64_BIOS_GRUB_GPT != "true"
  needs:
    - init:workspace
    - test:acceptance:qemux86_64:bios_grub_gpt
  variables:
    JOB_BASE_NAME: qemux86_64_bios_grub_gpt

publish:tests:acceptance:vexpress_qemu:uboot_uefi_grub:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_VEXPRESS_QEMU_UBOOT_UEFI_GRUB != "true"
  needs:
    - init:workspace
    - test:acceptance:vexpress_qemu:uboot_uefi_grub
  variables:
    JOB_BASE_NAME: vexpress_qemu_uboot_uefi_grub

publish:tests:acceptance:vexpress_qemu:flash:
  extends: .template_publish_acceptance_coverage
  except:
    variables:
      - $TEST_VEXPRESS_QEMU_FLASH != "true"
  needs:
    - init:workspace
    - test:acceptance:vexpress_qemu:flash
  variables:
    JOB_BASE_NAME: vexpress_qemu_flash
