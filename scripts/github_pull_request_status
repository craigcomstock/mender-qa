#!/bin/sh

request_body=$(cat <<EOF
{
  "state": "$1",
  "description": "$2",
  "target_url": "$3",
  "context": "$4"
}
EOF
)

# Special case for mender-qa running in Gitlab: It builds a specific branch, not
# by setting the MENDER_QA_REV variables, but by simply checking out that
# branch. It is recorded in the "CI_*" variables though.
if [ "$CI_PROJECT_NAME" = "mender-qa" ]; then
    if echo "$CI_COMMIT_REF_NAME" | egrep '^pr_[0-9]+$'; then
        export MENDER_QA_REV="pull/$(echo "$CI_COMMIT_REF_NAME" | egrep -o '[0-9]+')/head"
    else
        export MENDER_QA_REV="$CI_COMMIT_REF_NAME"
    fi
fi

# Split on newlines
IFS='
'
for key in $(env | sed -e 's/=.*//'); do
    if ! echo $key | egrep -q "_REV"; then
        # Not a Mender repo variable
        continue
    fi
    if echo $key | egrep -q "^DOCKER_ENV_"; then
        # Skip GitLab/Docker duplicated environment vars, i.e. MENDER_REV has a DOCKER_ENV_MENDER_REV
        continue
    fi
    if ! eval echo \$$key | egrep -q "^pull/[0-9]+/head$"; then
        # Not a pull request, skip.
        continue
    fi

    repo=$(echo ${key%_REV} | tr '[A-Z_]' '[a-z-]')
    if [ -n "$(eval echo \$${key}_GIT_SHA)" ]; then
        # GitLab script defines env variables with _GIT_SHA suffix for the PR commit under test
        git_commit="$(eval echo \$${key}_GIT_SHA)"
    else
        # Use Github API to fetch commit SHAs
        eval sha_endpoint=https://api.github.com/repos/mendersoftware/$repo/status/\$${key}
        echo "Querying API: $sha_endpoint"
        response="$(curl -fH "Authorization: bearer $GITHUB_BOT_TOKEN_REPO_STATUS" $sha_endpoint)"
        if [ $? -ne 0 ]; then
            continue
        fi
        git_commit="$(echo "$response" | jq -r '.sha')"
        if [ $? -ne 0 ]; then
            continue
        fi
    fi
    pr_status_endpoint=https://api.github.com/repos/mendersoftware/$repo/statuses/$git_commit

    # Print the variables
    echo "Reporting GitHub status for:"
    echo "    key=$key"
    echo "    repo=$repo"
    echo "    sha_endpoint=$sha_endpoint"
    echo "    git_commit=$git_commit"
    echo "    pr_status_endpoint=$pr_status_endpoint"
    echo "    request_body:"
    echo "$request_body"
    echo

    curl -H "Authorization: bearer $GITHUB_BOT_TOKEN_REPO_STATUS" \
         -d "$request_body" \
         "$pr_status_endpoint"
done

IFS=' '
